#!/bin/bash

usage() {
	echo "$(basename $0) [-h|--help] [-path osx-ca-certs] [\`which apt\`]"
}

osx_ca_certs=osx-ca-certs

while [ ! $# -eq 0 ]; do
	case "$1" in
		-h|--help)
			usage
			exit 1
			;;
		-path)
			shift
			osx_ca_certs=$1
			;;
		*apt)
			apt=$1
			;;
		*)
			echo "Unknown argument: $1" >&2
			exit 1
			;;
	esac
	shift
done

if [[ "${apt}" = "" ]]; then
	apt=$(which apt)
fi

if [[ ! -x "${apt}" ]]; then
	echo "APT not in PATH or given arguments, cannot continue"
	usage
	exit 1
fi

exitcode=0
err() {
	if [[ -d $1 ]]; then
		rm -r "${1}"
	fi

	exitcode=$(($exitcode + 1))
}

genbundle() {
	if [ ! -x /usr/local/bin/openssl ]; then
		echo "OpenSSL is not installed via APT! Cannot continue..."
		err && return 1
	fi

	local openssldir=$(openssl version -d | cut -d '"' -f 2)

	[[ "${openssldir}" = "" ]] && echo "OpenSSL directory not found" && err && return 1

	local tmpdir=$(/usr/bin/mktemp -d -t openssl_osx_ca)

	[[ "${tmpdir}" = "" ]] && echo "mktemp failed" && err "${tmpdir}" && return 1

	local certs="${tmpdir}/cert.pem"
	$osx_ca_certs > $certs

	d1=$($openssl md5 ${openssldir}/cert.pem | awk '{print $2}')
	d2=$($openssl md5 ${tmpdir}/cert.pem | awk '{print $2}')

	if [[ "${d1}" = "${d2}" ]]; then
		logger -t "$(basename $0)" "${openssldir}/cert.pem up to date"
	else
		# XXX: I don't think this is atomic on OSX, but it's as close as we're going to
		# get without a lot more work.
		mv -f ${tmpdir}/* ${openssldir}/

		logger -t "$(basename $0)" "${openssldir}/cert.pem updated"
	fi

	rm -r "${tmpdir}"
}

genbundle

exit $exitcode
